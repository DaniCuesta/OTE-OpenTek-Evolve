kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  name: java-app-bc-demo
  namespace: danicuestam-dev
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'frase-app:stable'  # Specifies the name and tag of the ImageStream where the built image will be stored
  resources: {}  # Custom resources can be defined for the build process (CPU, memory, etc.)
  successfulBuildsHistoryLimit: 5  # Limits the number of successful builds stored in the history
  failedBuildsHistoryLimit: 5  # Limits the number of failed builds stored in the history
  strategy:
    type: Docker
    dockerStrategy:
      from:
        kind: ImageStreamTag
        namespace: danicuestam-dev
        name: 'openjdk:latest'  # Base image from which the Java application will be built
      dockerfilePath: /app/Dockerfile  # Path to the Dockerfile within the source repository
  postCommit: {}  # Can contain custom actions to be executed after committing changes to the source repository
  source:
    type: Git
    git:
      uri: 'https://github.com/DaniCuesta/OTE-OpenTek-Evolve.git'  # Source repository URL
      ref: main  # Reference (branch, tag, etc.) in the source repository to be built
    images:
      - from:
          kind: ImageStreamTag
          name: 'frase-app:stable'  # Specifies the  ImageStreamTag from which the .jar file is retrieved
          - sourcePath: /app/FilosofoApp-SNAPSHOT.jar   # Path within the ImageStreamTag where the application's JAR file is located
            destinationDir: .  # Destination directory within the build context
    contextDir: /  # Directory within the source repository to be used as the context for the build
    sourceSecret:
      name: git-credentials  # Secret name containing credentials to access the source repository (Azure Repos in this case)
  triggers:
    - type: ImageChange
      imageChange:
        from:
          kind: ImageStreamTag
          name: 'openjdk:latest'  # Specifies the base image that will trigger the build when changed
  runPolicy: Serial  # Execution policy indicating whether builds should run serially or in parallel
